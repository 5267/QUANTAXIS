{
  "name": "QUANTAXIS",
  "tagline": "quantaxis  量化工具箱",
  "body": "# QUANTAXIS 量化金融工具箱\r\n# 注意：因为作者考研 暂停维护至2016.12.26日 谢谢\r\n\r\n![build](https://img.shields.io/badge/Build-passing-green.svg)\r\n![download](https://img.shields.io/badge/Download-47~140Mb-green.svg)\r\n![version](https://img.shields.io/badge/Version-%203.2.0%20alpha-orange.svg)\r\n![author](https://img.shields.io/badge/Powered%20by-%20%20yutiansut-red.svg)\r\n![website](https://img.shields.io/badge/Website-%20www.yutiansut.com-lightgrey.svg)\r\n![language](https://img.shields.io/badge/%20%20%20Language%20%20%20-%20%20%20Matlab%2FPython%2FJS%20%20-lightgrey.svg)\r\n![license](https://img.shields.io/badge/License-%20MIT-brightgreen.svg)\r\n![Attention](https://img.shields.io/badge/Attention!-%20作者考研%20暂停维护半年-red.svg)\r\n![quantaxis 3.0 beta](https://github.com/yutiansut/QUANTAXIS/blob/3.0/Picture/QUANTAXIS.jpg)\r\n\r\n\r\n[Website]:www.yutiansut.com | http://quantaxis.yutiansut.com<br>\r\n[Contact]:QQ 279336410<br>\r\n\r\n\r\n## Content 目录\r\n\r\n>+---++---++---++---++---++---++---++---++---+\r\n* [1.QUANTAXIS 简介](https://github.com/yutiansut/QUANTAXIS#1-quantaxis-简介)\r\n* [2. QUANTAXIS 特性](#2-quantaxis-特性)\r\n* &emsp;[2.1 QUANTAXIS 模块化编程](#21-quantaxis-模块化编程)\r\n* &emsp;&emsp;[2.1.1 QUANTAXIS 模块命名规则](#211-quantaxis-模块命名规则)\r\n* &emsp;&emsp;[2.1.2 QUANTAXIS 模块调用](#212-quantaxis-模块调用)\r\n* &emsp;[2.2 QUANTAXIS 数据可视化](#22-quantaxis-数据可视化)\r\n* &emsp;&emsp;[2.2.1 数据可视化方法](#221-数据可视化方法)\r\n* &emsp;&emsp;[2.2.2 运行NODEJS服务](#222-运行NODEJS服务)\r\n* &emsp;&emsp;[2.2.3 后台管理，中间件，路由跳转，mysql连接，AJAX等](#223-后台管理中间件路由跳转mysql连接ajax等)\r\n* &emsp;&emsp;[2.2.4 前端脚本](#224-前端脚本)\r\n* [3. QUANTAXIS 功能介绍](#3-quantaxis-功能介绍)\r\n* &emsp;[3.1 数据获取  DF类 Data Fetch](#31-数据获取--df类-data-fetch)\r\n* &emsp;&emsp;[3.1.1 Data Fetch 核心函数](#311-核心函数)\r\n* &emsp;[3.2 数据存贮 DS类 Data Storage](#32-数据存贮--ds类-data-storage)\r\n* &emsp;&emsp;[3.2.1 数据存储](#321-数据存储)\r\n* &emsp;&emsp;[3.2.2 涉及到数据库的操作](#322-涉及到数据库的操作)\r\n* &emsp;&emsp;[3.2.3 安装前的准备](#323-安装前的准备)\r\n* &emsp;&emsp;[3.2.4 APIS](#324-apis)\r\n* &emsp;[3.3 数据分析 DA类 Data Analysis](#33-数据分析--da类-data-analysis)\r\n* &emsp;&emsp;[3.3.1 数据分析常用内置工具箱](#331-数据分析常用内置工具箱)\r\n* &emsp;&emsp;[3.3.2 策略回测](#332-策略回测)\r\n* &emsp;&emsp;[3.3.3 交易内核](#333-交易内核)\r\n* &emsp;&emsp;[3.3.4 指标分析](#334-指标分析)\r\n* &emsp;&emsp;[3.3.5 APIS](#335-apis)\r\n* &emsp;[3.4 数据交互 DI类 Data Intergration](#34-数据交互--di类-data-intergration)\r\n* &emsp;&emsp;[3.4.1 JSON/Matlab](#341-jsonmatlab)\r\n* &emsp;&emsp;[3.4.2 NODEJS](#342-nodejs)\r\n* &emsp;&emsp;[3.4.3 NODEJS/MYSQL](#343-nodejsmysql)\r\n* &emsp;&emsp;[3.4.4 AJAX](#344-ajax)\r\n* &emsp;&emsp;[3.4.5 dc.js](#345-dcjs)\r\n* &emsp;&emsp;[3.4.6 APIS](#346-apis)\r\n* &emsp;[3.5 消息存贮 SM类 System Message](#35-消息存贮--sm类-system-message)\r\n* &emsp;&emsp;[3.5.1 MES方式](#351-mes方式)\r\n* &emsp;&emsp;[3.5.2 APIS](#352-apis)\r\n* [4. 版本历史](#4-版本历史)\r\n\r\n>+---++---++---++---++---++---++---++---++---+\r\n\r\n=========================\r\n\r\n## 1. QUANTAXIS 简介\r\nQUANTAXIS 使用模块化对象化编程，使用matlab进行快速回测，mysql作为数据中心，nodejs建站，使用javascript作为前端交互式展示\r\n核心组件均可独立调用\r\n![quantaxis 3.0 beta](https://github.com/yutiansut/QUANTAXIS/blob/3.0/Picture/QA3.0.png)\r\n\r\n```\r\nSYSTEM REQUIREMENTS\r\n====================\r\nMATLAB 2014a +    [best recommends]:MATLAB R2015b,R2016a\r\n                  (如果使用的是2015b以下版本 将isopen语句全部替换成isconnection语句)\r\nNODEJS 4.4 +      [best recommends]:NODEJS V5.9.1\r\nJAVASCRIPT  JQUERY V1.4.4+\r\nMYSQL  5.6 +      [best recommends]:MYSQL 5.7\r\nWind Personal API V2.0.0+\r\nJDBC CONNECTOR  5.1.7bin +\r\n```\r\n快速搭建一个QUANTAXIS实例(todo list: shell语言自动部署)\r\n```\r\nwin+R--cmd/powershell\r\ncd D:\r\nmkdir quantaxis\r\ncd quantaxis\r\ngit clone https://github.com/yutiansut/quantaxis\r\n····waiting····\r\n\r\ncd quantaxis  (if powershell)\r\nCopy-Item ('D:\\QUANTAXIS\\QUANTAXIS\\Auxiliary\\JDBC\\mysql-connector-java-5.1.7-bin.jar')  ('C:\\Program Files\\MATLAB\\R2016a\\java\\jar\\toolbox')\r\n\r\n\r\n\r\n```\r\n\r\n![quantaxis datacenter](https://github.com/yutiansut/QUANTAXIS/blob/3.0/Picture/QADC.gif)\r\n\r\n## 2. QUANTAXIS 特性\r\n通过[V2.0](https://github.com/yutiansut/QUANTAXIS/tree/v2.0),[V3.0](https://github.com/yutiansut/QUANTAXIS/tree/v3.0)和[V3.2.0](https://github.com/yutiansut/QUANTAXIS/tree/v3.0) 3个版本的升级以后，QUANTAXIS逐步发展成一个代码模块化和数据交互可视化的量化工具系统。\r\n### 2.1 QUANTAXIS 模块化编程\r\nQUANTAXIS致力于代码的功能分离和生命周期延长。在quantaxis中，所有的代码都被分成了不同的功能模块，通过类包(class package)的从属调用，来定义不同的功能块。\r\n类的模板与继承如下\r\n```\r\n类 TESTQUANTAXIS 的属性:\r\n\r\n    w\r\n    FET\r\n    MES\r\n    ID\r\n    ING\r\n    MYSQL\r\n\r\n\r\n类 TESTQUANTAXIS 的事件:\r\n\r\n    DFwindhistory\r\n    QAMessage\r\n    ObjectBeingDestroyed\r\n    mysqlexec\r\n\r\n\r\nans = \r\n\r\n    'w  % Inherited from DataFetch.Methods.DFWind'\r\n    'FET  % Inherited from DataFetch.Methods.Core.DFCore'\r\n    'MES  % Inherited from Message.QMMes'\r\n    'ID  % Inherited from Message.QMMes'\r\n    'ING  % Inherited from DataIntegration.DINodeJS'\r\n    'MYSQL  % Inherited from DataStorage.DSMysql'\r\n```\r\n#### 2.1.1 QUANTAXIS 模块命名规则\r\n\r\n1. 模块的命名\r\n模块的命名首先考虑母目录\r\n如\r\n>+DataStorage<br>\r\n ++DSMysql.m\r\n首先采用母目录的两个英文大写缩写 如DataStorage--DS，再加上本身代码名称。\r\n\r\n2. 函数的命名\r\n而对于模块内的函数命名，考虑到不同函数的重叠问题，主要以模块名+函数名,如\r\n>DSMysqlInit();<br>\r\n>DSMysqlCreateTable();\r\n\r\n3. 类属性的命名\r\n类属性的命名需要对比给出的api中已有类属性后进行确定\r\n\r\n#### 2.1.2 QUANTAXIS 模块调用\r\n对于类模块的调用，我们需要首先编辑类模块\r\n```\r\n>QAClassPackage.m\r\nclassdef QAClassPackage < DataFetch.DFWind & DataStorage.DSMysql & FreeMarkets.MultiDealer.FreeMarkets & Strategy.STBase\r\nend\r\n% 在一个classpackage中写好从属类，然后让quantaxis映射过去\r\n\r\n>QUANTAXIS.m\r\nclassdef QUANTAXIS < QAClassPackage\r\nend\r\n```\r\n当我们需要什么功能的时候，就调用什么功能模块即可。\r\n\r\n### 2.2 QUANTAXIS 数据可视化\r\n#### 2.2.1 数据可视化方法\r\n虽然matlab中也能够画图，如plot(); histfit();等等，但是图片不够美观，且不能交互式的动态展示，于是我们将\r\n\r\n#### 2.2.2 运行NODEJS服务\r\n```\r\ncd quantaxis\r\nnode datacenter/bin/www.js\r\n```\r\n打开浏览器 默认端口是3030\r\n#### 2.2.3 后台管理，中间件，路由跳转，mysql连接，AJAX等\r\nDataCenter/mysql --- 数据库组件\r\n--conn.js 数据库连接函数\r\n--sqlmapping.js 数据库脚本\r\n--sqlexec.js  数据库执行\r\n\r\nDataCenter/routes  --- 路由跳转组件\r\n--index.js 主路由\r\ndata.js user.js 都可以在DataCenter/app.js中重新定义\r\n\r\n\r\n#### 2.2.4 前端脚本\r\nDataCenter/views  --jade页面文件\r\nDataCenter/public  --资源文件  css样表，javascript，图片等等\r\n\r\n## 3. QUANTAXIS 功能介绍\r\n\r\n### 3.1 数据获取  DF类 Data Fetch\r\n传送门--[关于Data Fetch 类](https://github.com/yutiansut/QUANTAXIS/blob/master/%2BDataFetch/README.md)\r\n#### 3.1.1 核心函数\r\n>[DataFetch]<br>DFMain.m (类包函数，同时兼具初始化的任务)\r\n>>[+Methods]工具函数<br> DFSina.m (新浪接口)<br> DFTushare.m (Python tushare接口)<br> DFWind.m (Wind 接口)<br> DFYahoo.m (Yahoo 接口)\r\n>>>[+Core]<br> DFCore.m (核心包函数，指定该类的属性 FET 以及消息响应控制 MES族)\r\n\r\n#### 3.1.2 调用方式：\r\n```\r\nclassdef QAClassPackage< DataFetch.DFMain \r\nend\r\n\r\nclassdef QUANTAXIS < QAClassPackage\r\nend\r\n```\r\n#### 3.1.3 APIS\r\n所有被获取到的数据都在QA.FET族中<br>\r\n如果从wind获取数据，数据在QA.FET.Data中<br>\r\n具体参见 [关于Data Fetch 类](https://github.com/yutiansut/QUANTAXIS/blob/master/%2BDataFetch/README.md)\r\n\r\n### 3.2 数据存贮  DS类 Data Storage\r\n传送门--[关于DataStorage 类](https://github.com/yutiansut/QUANTAXIS/blob/master/%2BDataStorage/README.md)\r\n#### 3.2.1 数据存储\r\n我们在考虑和比较了各种数据存储的方便性易用度以后，选择了使用MySQL作为QUANTAXIS的数据库。\r\n如果需要，也可以自行开发SQLSERVER, MongoDB, db2, Oracle等等。\r\n#### 3.2.2 涉及到数据库的操作\r\nQA.Fetch\r\n数据获取\r\n数据更新<br>\r\n![](https://github.com/yutiansut/QUANTAXIS/blob/master/Picture/DatabaseUpdate.png)\r\n#### 3.2.3 安装前的准备\r\n> Attention\r\n1.将quantaxis/auxiliary/JDBC中的jar文件复制到  .\\MATLAB\\R2015a\\java\\jar\\toolbox\r\n2.打开C:\\Program Files\\MATLAB\\MATLAB Production Server\\R2015a\\toolbox\\local下的classpath.txt文件，在最末加入\r\n$matlabroot/java/jar/toolbox/mysql-connector-java-5.1.7-bin.jar\r\n\r\n如果不添加JDBC数据库，matlab会报错：\r\n“未定义与 'struct' 类型的输入参数相对应的函数 'fetch'。\r\n\r\n#### 3.2.4 APIS\r\n\r\n### 3.3 数据分析  DA类 Data Analysis\r\n#### 3.3.1 数据分析常用内置工具箱\r\n#### 3.3.2 策略回测\r\nQUANTAXIS提供了一种快速的回测方式，通过简单的价格判断来形成对于策略报价的成交判断。\r\n![data](https://github.com/yutiansut/QUANTAXIS/blob/master/Picture/DAExample.png)\r\n回测后的数据会自动以策略的形式存入mysql\r\n![](https://github.com/yutiansut/QUANTAXIS/blob/master/Picture/StrategyMysql.png)\r\n#### 3.3.3 交易内核\r\n#### 3.3.4 指标分析\r\nROC曲线分析\r\n盈利分析\r\n#### 3.3.5 APIS\r\n### 3.4 数据交互  DI类 Data Intergration\r\n#### 3.4.1 JSON/Matlab\r\n将matlab转化为JSON\r\n\r\n#### 3.4.2 NODEJS\r\n#### 3.4.3 NODEJS/MYSQL\r\n#### 3.4.4 AJAX\r\n#### 3.4.5 dc.js\r\n#### 3.4.6 APIS\r\n### 3.5 消息存贮  SM类 System Message\r\n#### 3.5.1 MES方式\r\n在程序中，我们设置了监听及系统日志，如果需要查看记录的消息，可以点击当前类下的\r\nMES类\r\n在MES.History中，你可以看到记录的消息日志\r\n\r\n如果需要另外响应消息，请参见3.5.2的APIS\r\n#### 3.5.2 APIS\r\n\r\n```\r\n# 首先加入MES类包\r\nclassdef QA < Message.QMMes\r\nend\r\n\r\nQA.MES.Str='';\r\nnotify(QA,'QAMessage')\r\n\r\n```\r\n\r\n## 4. [版本历史](https://github.com/yutiansut/QUANTAXIS/releases)\r\n\r\n\r\n1.0版本使用的主要是新浪网的数据。<br>1.5版本是在了解了对象化编程OOP以后对于平台做的改进\r\n<br>2.0版本主要是对于数据源进行了更换，并重新写了数据库连接和调用函数。从2.0起，quantaxis使用wind服务商提供的量化交易数据并选择mysql作为数据存储方式。\r\n<br>2.5版本则主要增加了交易内核 QUANTCORE 1.0 QC1.0还是一个静态的交易系统，成交的判断方式是以策略报价和历史成交价区间的比较进行判定。\r\n<br>3.0版本将matlab的及时数据以json格式保存到状态空间或者mysql中，使用ajax技术对于mysql数据进行抽取，使用dc.js等可视化javascript将数据展示在页面上，形成交互式的数据可视化方案\r\n<br>3.2 模块化编程 将class重新改包，定义功能化模块，方便调用并增加生命周期\r\n\r\n\r\n\r\n\r\n## [QUANTAXIS](https://github.com/yutiansut/QUANTAXIS/blob/master/QUANTAXIS.m)\r\n调用类 classdef [xx] < QUANTAXIS\r\n----\r\n主函数 主要是一个量化平台，负责策略实现和数据更新\r\n类似的平台 如python下的[easytrader](https://github.com/shidenggui/easytrader)\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}